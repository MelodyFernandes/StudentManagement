@model StudentManagement.Models.Student

@{
    ViewBag.Title = "NewStudent";
    List<SelectListItem> departmentList = Model.Departments.ConvertAll(a =>
    {
        return new SelectListItem()
        {
            Text = a.Name.ToString(),
            Value = a.Id.ToString(),
            Selected = false
        };
    });

    List<SelectListItem> compulsorySub = Model.Compulsory.ConvertAll(a =>
    {
        return new SelectListItem()
        {
            Text = a.Name.ToString(),
            Value = a.Id.ToString(),
            Selected = false
        };
    });

    List<SelectListItem> opSub = Model.Optional.ConvertAll(a =>
    {
        return new SelectListItem()
        {
            Text = a.Name.ToString(),
            Value = a.Id.ToString(),
            Selected = false
        };
    });
}

<h2>NewStudent</h2>


@using (Html.BeginForm("CreateStudent", "Home", FormMethod.Post, new { id = "newstudform" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Student</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Select Department *</label>
            <div class="col-md-10">
                @Html.DropDownList("Department", departmentList, "Select Department")
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Select Subject 1 *</label>
            <div class="col-md-10">
                @Html.DropDownList("Subject1", compulsorySub, "Select Subject")
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Select Subject 2 *</label>
            <div class="col-md-10">
                @Html.DropDownList("Subject2", compulsorySub, "Select Subject")
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Add Compulsory Subject" id="addC" class="btn btn-default">
            </div>
        </div>

        <div class="form-group" id="addCDiv" style="display:none">
            <label class="control-label col-md-2">Select Subject 3</label>
            <div class="col-md-10">
                @Html.DropDownList("Subject3", compulsorySub, "Select Subject")
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Select Optional Subject 1 *</label>
            <div class="col-md-10">
                @Html.DropDownList("SubjectOp1", opSub, "Select Subject")
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Add Optional Subject" id="addO" class="btn btn-default">
            </div>
        </div>

        <div class="form-group" style="display:none" id="addODiv">
            <label class="control-label col-md-2">Select Optional Subject 2</label>
            <div class="col-md-10">
                @Html.DropDownList("SubjectOp2", opSub, "Select Subject")
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="@Url.Content("~/Content/CustomJs/NewStudent.js")"></script>
}
